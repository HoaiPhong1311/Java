//      Bài 2. Kế thừa lớp Person và sắp xếp theo tên       //

/*
Đề:
Xây dựng lớp Person với các thuộc tính : Tên (xâu kí tự không quá 100 kí tự), ngày sinh, địa chỉ và 
các hàm khởi tạo không tham số (gán các trường là xâu rỗng) và hàm khởi tạo đầy đủ tham số, 
phương thức in() để trả về thông tin. Lớp Student kế thừa từ lớp Person và có thêm thuộc tính là mã sinh viên, 
GPA và lớp, ghi đè phương thức in() . 
Nhập danh sách sinh viên từ bàn phím và in ra màn hình danh sách sinh viên trong đó tên được chuẩn hóa 
và ngày sinh đưa về đúng chuẩn dd/mm/yyyy. 
Tên sinh viên được sắp xếp theo thứ tự từ điển tăng dần, thứ tự từ điển của tên được xét từ tên, họ, đệm. 
Nếu 2 bạn cùng tên thì bạn nào xuất hiện trong danh sách trước được in ra trước.
 */

 /*
Input Format
    Dòng 1 là N : số lượng sinh viên. Các dòng tiếp theo là thông tin sinh viên, 
    mỗi sinh viên được mô tả bằng 5 dòng : Tên, ngày sinh, địa chỉ, lớp, gpa.

Constraints
    1<=N<=1000;

Output Format
    In ra danh sách sinh viên sau khi được chuẩn hóa, mã sinh viên tăng tự động từ 0001. 
    Các thông tin viết cách nhau một dấu cách, điểm GPA in ra với 2 số sau dấu phẩy.
  */

  /*
Sample Input

6
trAN Phuong HaI
17/4/2004
Ha Noi
DTVT1
2.50
trAN Phuong TuaN
28/1/2004
Ha Nam
DTVT1
2.50
Nguyen AnH MaNH
11/3/2004
Ha Noi
CNTT1
2.70
pham duC TuaN
21/5/2004
Ha Noi
DTVT1
2.50
trAN VAn LoNG
24/6/2004
Ha Noi
CNTT1
2.80
Luong Ngoc LoNG
12/11/2004
Nam Dinh
CNTT2
3.05

Sample Output

0001 Tran Phuong Hai 17/04/2004 Ha Noi DTVT1 2.50
0006 Luong Ngoc Long 12/11/2004 Nam Dinh CNTT2 3.05
0005 Tran Van Long 24/06/2004 Ha Noi CNTT1 2.80
0003 Nguyen Anh Manh 11/03/2004 Ha Noi CNTT1 2.70
0004 Pham Duc Tuan 21/05/2004 Ha Noi DTVT1 2.50
0002 Tran Phuong Tuan 28/01/2004 Ha Nam DTVT1 2.50
   */


  import java.util.Arrays;
  import java.util.Comparator;
  import java.util.Scanner;
  
  
  class Person {
      private String ten, ngaySinh, diaChi;
  
      public Person(String ten, String ngaySinh, String diaChi) {
          this.ten = ten;
          this.ngaySinh = ngaySinh;
          this.diaChi = diaChi;
      }
  
      public Person() {
          ten = "";
          ngaySinh = "";
          diaChi = "";
      }
      
      public void chuanHoa(){
          // chuanHoaTen
          String[] a = ten.trim().split("\\s+");
          String name = "";
          for(String x : a){
              name += Character.toUpperCase(x.charAt(0));
              for(int i = 1; i < x.length(); i++)
                  name += Character.toLowerCase(x.charAt(i));
              name += " ";
          }
          ten = name.trim();
          
          // chuanHoaNgaySinh
          StringBuilder sb = new StringBuilder(ngaySinh);
          if(sb.charAt(1) == '/') sb.insert(0, 0);
          if(sb.charAt(4) == '/') sb.insert(3, 0);
          ngaySinh = sb.toString();
      }
  
      public String getSortedName(){
          String[] a = ten.trim().split("\\s+");
          String name = a[a.length - 1] + " ";
          for(int i = 0; i < a.length - 1; i++){
              name += a[i] + " ";
          }
          return name.trim();
      }
      
      public String toString(){
          return ten + " " + ngaySinh + " " + diaChi;
      }
  }
  
  
  class Student extends Person {
      private String ma, lop;
      private double gpa;
  
      public Student(String ma, String lop, double gpa, String ten, String ngaySinh, String diaChi) {
          super(ten, ngaySinh, diaChi);
          this.ma = ma;
          this.lop = lop;
          this.gpa = gpa;
      }
      
      public String toString(){
          return ma + " " + super.toString() + " " + lop + " " + String.format("%.2f", gpa);
      }
  }
  
  public class Bai_2 {
      public static void main(String[] args) {
          Scanner sc = new Scanner(System.in);
          
          int n = sc.nextInt();
          Student[] a = new Student[n];
          for(int i = 0; i < n; i++){
              String ma = String.format("%04d", i + 1);
              sc.nextLine();
              String ten, ngaySinh, diaChi, lop;
              double gpa;
              ten = sc.nextLine();
              ngaySinh = sc.nextLine();
              diaChi = sc.nextLine();
              lop = sc.nextLine();
              gpa = sc.nextDouble();
              a[i] = new Student(ma, lop, gpa, ten, ngaySinh, diaChi);
              a[i].chuanHoa();
              a[i].getSortedName();
          }
          
          Arrays.sort(a, new Comparator<Student>(){
              @Override
              public int compare(Student x, Student y) {
                  return x.getSortedName().compareTo(y.getSortedName());
              }
          });
          
          for(Student x : a){
              System.out.println(x);
          }
      }
  }
  