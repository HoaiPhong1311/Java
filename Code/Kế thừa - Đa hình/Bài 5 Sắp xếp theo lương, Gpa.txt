//      Bài 5. Sắp xếp theo lương, Gpa

/*
Trường đại học XYZ cần quản lý các đối tượng là sinh viên và giáo viên. Sinh viên gồm các thông tin : mã sinh viên, tên, ngày sinh, địa chỉ, lớp, điểm gpa. Giáo viên gồm các thông tin : mã giáo viên, tên, ngày sinh, địa chỉ, khoa, lương. Thực hiện đọc các thông tin danh sách sinh viên và giáo viên từ bàn phím sau đó chuẩn hóa tên, ngày sinh và in ra danh sách sinh viên sau đó là danh sách giáo viên, biết rằng sinh viên sẽ có mã bắt đầu bằng SV (ví dụ SV112), giáo viên có mã bắt đầu bằng GV (ví dụ GV222). Đầu tiên in ra danh sách giáo viên theo lương giảm dần, nếu 2 giáo viên có cùng lương thì in theo mã giáo viên tăng dần(từ điển), tiếp đó in ra danh sách sinh viên theo gpa giảm dần, nếu 2 sinh viên có cùng gpa thì in theo mã sinh viên tăng dần(từ điển).

Input Format

Dòng đầu tiên là N : số lượng giáo viên và sinh viên. Các dòng tiếp theo mô tả thông tin của giáo viên hoặc sinh viên, mỗi thông tin gồm 6 dòng, đối với sinh viên 6 dòng gồm : mã sinh viên, tên, ngày sinh, địa chỉ, lớp, điểm gpa, đối với giáo viên 6 dòng gồm : mã giáo viên, tên, ngày sinh, địa chỉ, khoa, lương.

Constraints

1<=N<=1000;

Output Format

Đầu tiên in ra danh sách giáo viên, mỗi giáo viên in ra thông tin trên 1 dòng, các thông tin cách nhau một dấu cách. Những dòng tiếp theo in ra danh sách sinh viên, mỗi sinh viên in thông tin trên 1 dòng, các thông tin cách nhau một dấu cách, gpa in 2 số sau dấu phẩy.

Sample Input 0

5
GV1
pham duC LoNG
4/3/1976
Ha Nam
CNTT
18000000
SV2
Vu AnH LoNG
3/11/2004
Hai Duong
DTVT1
2.70
SV3
trAN AnH NAM
27/11/2004
Nam Dinh
ATTT3
3.05
GV4
Nguyen VAn MaNH
12/4/1978
Ha Noi
Co khi
25000000
SV5
Luong Phuong HaI
3/4/2004
Nam Dinh
DTVT2
2.50
Sample Output 0

DANH SACH GIAO VIEN :
GV4 Nguyen Van Manh 12/04/1978 Ha Noi Co khi 25000000
GV1 Pham Duc Long 04/03/1976 Ha Nam CNTT 18000000
DANH SACH SINH VIEN :
SV3 Tran Anh Nam 27/11/2004 Nam Dinh ATTT3 3.05
SV2 Vu Anh Long 03/11/2004 Hai Duong DTVT1 2.70
SV5 Luong Phuong Hai 03/04/2004 Nam Dinh DTVT2 2.50
 */

 
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Scanner;


class Person {
    private String ma, ten, ngaySinh, diaChi;

    public Person(String ma, String ten, String ngaySinh, String diaChi) {
        this.ma = ma;
        this.ten = ten;
        this.ngaySinh = ngaySinh;
        this.diaChi = diaChi;
    }

    public Person() {
        ten = "";
        ngaySinh = "";
        diaChi = "";
    }
    
    public void chuanHoa(){
        // chuanHoaTen
        String[] a = ten.trim().split("\\s+");
        String name = "";
        for(String x : a){
            name += Character.toUpperCase(x.charAt(0));
            for(int i = 1; i < x.length(); i++)
                name += Character.toLowerCase(x.charAt(i));
            name += " ";
        }
        ten = name.trim();
        
        // chuanHoaNgaySinh
        StringBuilder sb = new StringBuilder(ngaySinh);
        if(sb.charAt(1) == '/') sb.insert(0, 0);
        if(sb.charAt(4) == '/') sb.insert(3, 0);
        ngaySinh = sb.toString();
    }

    public String getMa() {
        return ma;
    }
    
    

    public String toString(){
        return ma + " " + ten + " " + ngaySinh + " " + diaChi;
    }
}


class Student extends Person {
    private String lop;
    private double gpa;

    public Student(String lop, double gpa, String ma, String ten, String ngaySinh, String diaChi) {
        super(ma, ten, ngaySinh, diaChi);
        this.lop = lop;
        this.gpa = gpa;
    }

    public double getGpa() {
        return gpa;
    }
    
    public String toString(){
        return super.toString() + " " + lop + " " + String.format("%.2f", gpa);
    }
}


class Teacher extends Person {
    private String khoa;
    private long luong;

    public Teacher(String khoa, long luong, String ma, String ten, String ngaySinh, String diaChi) {
        super(ma, ten, ngaySinh, diaChi);
        this.khoa = khoa;
        this.luong = luong;
    }

    public long getLuong() {
        return luong;
    }
    
    public String toString(){
        return super.toString() + " " + khoa + " " + luong;
    }
}




public class Bai_5 {
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt();
        sc.nextLine();
        ArrayList<Student> a1 = new ArrayList<>();
        ArrayList<Teacher> a2 = new ArrayList<>();
        for(int i = 0; i < n; i++){
            String ma = sc.nextLine();
            String ten = sc.nextLine();
            String ngaySinh = sc.nextLine();
            String diaChi = sc.nextLine();
            if(ma.charAt(0) == 'G'){
                String khoa = sc.nextLine();
                long luong = Long.parseLong(sc.nextLine());
                Teacher t = new Teacher(khoa, luong, ma, ten, ngaySinh, diaChi);
                t.chuanHoa();
                a2.add(t);
            }
            else{
                String lop = sc.nextLine();
                double gpa = Double.parseDouble(sc.nextLine());
                Student s = new Student(lop, gpa, ma, ten, ngaySinh, diaChi);
                s.chuanHoa();
                a1.add(s);
            }
        }
        
        Collections.sort(a1, new Comparator<Student>(){
            @Override
            public int compare(Student x, Student y) {
                if(x.getGpa() != y.getGpa()){
                    if(x.getGpa() > y.getGpa()) return -1;
                    return 1;
                }
                else return x.getMa().compareTo(y.getMa());
            }
        });
        
        Collections.sort(a2, new Comparator<Teacher>(){
            @Override
            public int compare(Teacher x, Teacher y) {
                if(x.getLuong() != y.getLuong()) return (int)(y.getLuong() - x.getLuong());
                else return x.getMa().compareTo(y.getMa());
            }
        });
        
        System.out.println("DANH SACH GIAO VIEN :");
        for(Teacher x : a2)
            System.out.println(x);
        System.out.println("DANH SACH SINH VIEN :");
        for(Student x : a1)
            System.out.println(x);
    }
}
