//      Bài 9. Mua xe

/*
Một cửa hàng bán oto, xe máy cần quản lý các loại xe máy và xe ô tô. Trong đó xe máy có những thông tin : mã xe, tên xe, hãng, màu sắc, tốc độ tối đa, giá bán. Xe ô tô có những thông tin : mã xe, tên xe, hãng, màu sắc, mã lực, giá bán. Nhập danh sách các phương tiện và tiến hành liệt kê các xe có giá bán trong khoảng tìm kiếm. Biết rằng xe máy có mã bắt đầu bằng XM (ví dụ XM001), và ô tô có mã bắt đầu bằng OTO (ví dụ OTO521)

Input Format

Dòng đầu tiên chứa N : số lượng phương tiện. Các dòng tiếp theo mô tả phương tiện, nếu là xe máy thì gồm 6 dòng : mã xe, tên xe, hãng, màu sắc, tốc độ tối đa, giá bán, nếu là ô tô thì gồm 6 dòng : mã xe, tên xe, hãng, màu sắc, mã lực, giá bán. Dòng cuối cùng là khoảng giá cần tìm kiếm.

Constraints

1<=N<=1000;

Output Format

In ra các phương tiện có giá bán trong khoảng tìm kiếm. Đầu tiên liệt kê các xe oto sau đó liệt kê các xe máy. Các thông tin của phương tiện được in cách nhau một dấu cách

Sample Input 0

5
OTO1
TOY555
TOYOTA
Vang
220
600
XM2
Ex
YAMAHA
Trang
200
30
XM3
HON112
HONDA
Xanh
180
30
OTO4
TOY555
TOYOTA
Do
186
600
XM5
Ex
YAMAHA
Xanh
220
40
564 1064
Sample Output 0

DANH SACH OTO :
OTO1 TOY555 TOYOTA Vang 220 600
OTO4 TOY555 TOYOTA Do 186 600
DANH SACH XE MAY :
 */

 import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Scanner;


class Vehicle {
    protected String ma, ten, hang, mau;
    protected int gia;

    public Vehicle(String ma, String ten, String hang, String mau, int gia) {
        this.ma = ma;
        this.ten = ten;
        this.hang = hang;
        this.mau = mau;
        this.gia = gia;
    }

    public String getHang() {
        return hang;
    }
    
    public boolean check(int min, int max){
        return gia >= min && gia <= max;
    }

}

class XeMay extends Vehicle {
    private int tocDo;    

    public XeMay(String ma, String ten, String hang, String mau, int tocDo, int gia) {
        super(ma, ten, hang, mau, gia);
        this.tocDo = tocDo;
    }

    @Override
    public String toString() {
        return this.ma + " " + this.ten + " " + this.hang + " " + this.mau + " " + this.tocDo + " " + this.gia;
    }
    
}

class OTo extends Vehicle{
    private int maLuc;

    public OTo(String ma, String ten, String hang, String mau, int maLuc, int gia) {
        super(ma, ten, hang, mau, gia);
        this.maLuc = maLuc;
    }
    
    @Override
    public String toString() {
        return this.ma + " " + this.ten + " " + this.hang + " " + this.mau + " " + this.maLuc + " " + this.gia;
    }
}


public class Bai_9 {
    
    public static boolean check(Vehicle a, String hang){
        if(a.getHang().equals(hang)) return true;
        return false;
    }
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt();
        ArrayList<XeMay> xm = new ArrayList<>();
        ArrayList<OTo> ot = new ArrayList<>();
        for(int i = 0; i < n; i++){
            String ma = sc.next();
            if(ma.startsWith("OTO")){
                OTo a = new OTo(ma, sc.next(), sc.next(), sc.next(), sc.nextInt(), sc.nextInt());
                ot.add(a);
            } else{
                XeMay a = new XeMay(ma, sc.next(), sc.next(), sc.next(), sc.nextInt(), sc.nextInt());
                xm.add(a);
            }
        }
        int min = sc.nextInt();
        int max = sc.nextInt();
        System.out.println("DANH SACH OTO :");
        for(OTo x : ot){
            if(x.check(min, max)) System.out.println(x);
        }
        System.out.println("DANH SACH XE MAY :");
        for(XeMay x : xm){
            if(x.check(min, max)) System.out.println(x);
        }
    }
}