//      Bài 8. Lớp phân số

/*
Phân số là sự biểu diễn số hữu tỷ dưới dạng tỷ lệ của hai số nguyên, trong đó số ở trên được gọi là tử số, còn số ở dưới được gọi là mẫu số. Cho hai phân số A và B có tử số và mẫu số được nhập từ bàn phím. Viết chương trình thực hiện hai nhiệm vụ sau: 1. Thực hiện phép tính C = (A + B)^2 và rút gọn kết quả. 2. Thực hiện phép tính D = A x B x C và rút gọn kết quả.

Input Format

Dòng đầu tiên là số bộ test T; T dòng tiếp theo, mỗi dòng gồm 4 số lần lượt là tử và mẫu số của phân số A và phân số B

Constraints

(T <= 100); Các phân số có tử số và mẫu số là số nguyên trị tuyệt đối <= 100; Dữ liệu đảm bảo mẫu số khác 0.

Output Format

Ghi ra kết quả của hai phép tính theo định dạng phân số, cách nhau một khoảng trống.

Sample Input 0

6
1 2 3 4
2 3 4 5
-23 -36 99 90
24 -1 99 60
-40 -9 98 91
37 -31 61 92
Sample Output 0

25/16 75/128
484/225 3872/3375
97969/32400 24786157/11664000
199809/400 19781091/-1000
417316/13689 233696960/1601613
2289169/8133904 5166654433/-23197894208
 */

 
import java.util.Scanner;

class PhanSo {
    private long tu, mau;

    public PhanSo(long tu, long mau) {
        this.tu = tu;
        this.mau = mau;
        toiGian();
    }

    public void add(PhanSo a){
        tu = tu * a.mau + a.tu * mau;
        mau *= a.mau;
        toiGian();
    }
    
    public void square(){
        tu *= tu;
        mau *= mau;
        toiGian();
    }
    
    public void mul(PhanSo a){
        tu *= a.tu;
        mau *= a.mau;
        toiGian();
    }
    
    private long gcd(long a, long b){
        if(b == 0) return a;
        return gcd(b, a % b);
    }
    
    private void toiGian(){
        long gcd = gcd(tu, mau);
        tu /= gcd;
        mau /= gcd;
    }
    
    public String toString(){
        return tu + "/" + mau;
    }
}

public class Bai_8 {
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int t = sc.nextInt();
        
        while(t-- > 0){
            long tua = sc.nextInt(), maua = sc.nextInt();
            long tub = sc.nextInt(), maub = sc.nextInt();
            
            PhanSo a = new PhanSo(tua, maua);
            PhanSo b = new PhanSo(tub, maub);
            
            PhanSo c = new PhanSo(tua, maua);
            c.add(b);
            c.square();
            
            PhanSo d = new PhanSo(tua, maua);
            d.mul(b);
            d.mul(c);
            
            System.out.println(c + " " + d);
        }
    }
}
