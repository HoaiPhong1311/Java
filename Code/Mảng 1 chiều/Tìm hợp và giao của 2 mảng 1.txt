Cho 2 mảng số nguyên a và b gồm n và m phần tử. Gọi mảng c và d lần lượt là mảng chỉ bao gồm các phần tử khác nhau của a và b. Hãy tìm mảng giao và hợp của mảng c và d và liệt kê theo thứ tự tăng dần.

Hướng dẫn tìm giao : Dùng 1 map để đánh dấu những giá trị xuất hiện trong mảng a, Dùng 1 map để đánh dấu những giá trị xuất hiện trong mảng b. Duyệt 1 trong 2 map và kiểm tra xem phần tử của map hiện tại có nằm trong map thứ 2 hay không => giao. Tìm hợp : Đưa các phần tử trong 2 mảng vào 1 cái set

Input Format

Dòng đầu tiên là số lượng phần tử của 2 dãy n và m. Dòng thứ 2 là n phần tử trong dãy số 1. Dòng thứ 3 là m phần tử trong dãy thứ 2.

Constraints

1≤n,m≤10^6; 0≤ai≤10^7

Output Format

Dòng đầu tiên in ra giao của 2 mảng c và d. Dòng thứ 2 in ra hợp của 2 mảng c và d.

Sample Input 0

5 6
1 2 1 2 7
1 2 3 4 5 6
Sample Output 0

1 2
1 2 3 4 5 6 7

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;
import java.util.TreeSet;

public class Draft {


    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt(), m = sc.nextInt();
        HashSet<Integer> setA = new HashSet<>();
        for (int i = 0; i < n; i++) {
            int num = sc.nextInt();
            setA.add(num);
        }
        
        HashSet<Integer> setB = new HashSet<>();
        for (int i = 0; i < m; i++) {
            int num = sc.nextInt();
            setB.add(num);
        }
        
        HashSet<Integer> giao = new HashSet<>(setA);
        giao.retainAll(setB);
        
        HashSet<Integer> hop = new HashSet<>(setA);
        hop.addAll(setB);
        
        ArrayList<Integer> giaos = new ArrayList<>(giao);
        ArrayList<Integer> hops = new ArrayList<>(hop);
        
        Collections.sort(giaos);
        Collections.sort(hops);
        
        for(int x : giaos) System.out.print(x + " ");
        System.out.println("");
        for(int x : hops) System.out.print(x + " ");
    }
}
