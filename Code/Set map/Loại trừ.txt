Cho mảng A[] và B[] có N và M phần tử là các số nguyên, hãy tìm các phần tử xuất hiện trong mảng 1 mà không xuất hiện trong mảng 2.

Input Format

Dòng đầu tiên là N và M; Dòng thứ 2 là N số của mảng A[]; Dòng thứ 3 là M số của mảng B[];

Constraints

1<=N, M<=10^6; -10^9<=A[i], B[i] <= 10^9;

Output Format

In ra các số xuất hiện trong mảng 1 mà không xuất hiện trong mảng 2 theo thứ tự từ bé đến lớn, mỗi giá trị thỏa mãn chỉ liệt kê 1 lần.

Sample Input 0

3 4
1 2 3
1 2 4 5
Sample Output 0

3

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;

public class Draft {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        TreeSet<Integer> set1 = new TreeSet<>();
        TreeSet<Integer> set2 = new TreeSet<>();
        int a = sc.nextInt(), b = sc.nextInt();
        for(int i = 0; i < a; i++){
            set1.add(sc.nextInt());
        }
        for(int i = 0; i < b; i++){
            set2.add(sc.nextInt());
        }
        for(int x : set1){
            if(set1.contains(x) != set2.contains(x))
                System.out.print(x + " ");
        }
    }
}
