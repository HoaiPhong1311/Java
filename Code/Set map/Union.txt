Cho mảng A[] và B[] lần lượt gồm N và M số nguyên, nhiệm vụ của bạn là tìm hợp của 2 mảng này và in theo thứ tự từ lớn về nhỏ.

Gợi ý : Để tìm hợp của 2 mảng thì chỉ cần dùng 1 set và lưu mọi phần tử của 2 mảng, set sẽ tự loại bỏ các phần tử trùng nhau trong cả 2 mảng.

Input Format

Dòng 1 gồm N và M

Dòng 2 gồm N số trong mảng A[]

Dòng 3 gồm M số trong mảng B[]

Constraints

1<=N,M<=10^5

-10^9<=A[i],B[i]<=10^9

Output Format

In ra tập hợp của 2 mảng theo thứ tự giảm dần

Sample Input 0

9 6
7 9 2 0 0 5 6 4 7 
9 7 3 4 5 7 
Sample Output 0

9 7 6 5 4 3 2 0 

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;

public class Draft {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        TreeSet<Integer> set = new TreeSet<>();
        int a = sc.nextInt();
        int b = sc.nextInt();
        for(int i = 0; i < a; i++){
            int x = sc.nextInt();
            set.add(x);
        }
        for(int i = 0; i < b; i++){
            int x = sc.nextInt();
            set.add(x);
        }
        ArrayList<Integer> arr = new ArrayList<>();
        for(int x : set){
            arr.add(x);
        }
        for(int i = arr.size() - 1; i >= 0; i--)
            System.out.print(arr.get(i) + " ");
    }
}
