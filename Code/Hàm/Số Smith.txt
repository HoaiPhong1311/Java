Cho số tự nhiên N. Nhiệm vụ của bạn là hãy kiểm tra N có phải là số Smith hay không. Một số được gọi là số Smith nếu N không phải là số nguyên tố và có tổng các chữ số của N bằng tổng các chữ số của các thừa số nguyên tố trong phân tích của N. Ví dụ N = 666 có các thừa số nguyên tố là 2, 3, 3, 37 có tổng các chữ số là 18.

Input Format

Số nguyên dương N

Constraints

1≤N≤10^8.

Output Format

In ra YES nếu N là số Smith, ngược lại in ra NO.

Sample Input 0

22
Sample Output 0

YES

import java.util.Scanner;

public class Draft {
    
    public static int tongChuSo(int n){
        int sum = 0;
        while(n != 0){
            sum += n % 10;
            n /= 10;
        }
        return sum;
    }
    
    public static boolean soSmith(int n){
        int sum1 = tongChuSo(n);
        int sum2 = 0;
        int tmp = n;
        for(int i = 2; i <= Math.sqrt(n); i++){
            if(n % i == 0){
                while(n % i == 0){
                    sum2 += tongChuSo(i);
                    n /= i;
                }
            }
        }
        if(tmp == n) return false;
        if(n > 1) sum2 += tongChuSo(n);
        return sum1 == sum2;
    }
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt();
        if(soSmith(n)) System.out.println("YES");
        else System.out.println("NO");
    }
}
